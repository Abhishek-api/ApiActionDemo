
pipeline{   
   agent any
   stages {
        //Checkout Git Repo
        stage('Checkout') {
            steps {
               sh 'pwd'
            }
            
        }
        //Lint the OpenAPI spec using Insomnia CLI
        stage('Lint OpenAPI Spec') {
            steps {
                sh 'inso lint spec pipe1.yml'
            }
        }
        //Generate Kong configuration in declarative format
         stage('Generate Kong Configuration') {
            steps {
                sh 'inso generate config pipe1.yml --type declarative -o new-kong.yaml'
            }
        }
        //Display the contents of the generated Kong configuration
        stage('open kong.yaml') {
            steps {
                sh 'cat new-kong.yaml'
            }
        }
  stages {
        //Checkout Git Repo
        stage('Checkout') {
            steps {
                git  url: 'https://github.com/Abhishek-api/ApiActionDemo'
            }
        }
        //Lint the OpenAPI spec using Insomnia CLI
        stage('Deploy to dev portal') {
            steps {
                sh ' KONG_ADMIN_URL=https://34.125.74.21:8445 portal deploy --preserve default -D '
            }
        }
   }
   post {
        always {
           deleteDir()
       }
    }

        //Validate the Kong configuration using deck CLI
        stage('Validate the Kong configuration using deck CLI') {
            steps {
                sh 'deck validate -s new-kong.yaml'
            }
        }
        
         stage('Convert Kong Version') {
            steps {
                sh 'deck convert --from kong-gateway-2.x --to kong-gateway-3.x --input-file new-kong.yaml --output-file new-kong3.yaml'
            }
        }
        stage('open new-kong3.yaml') {
            steps {
                sh 'cat new-kong3.yaml'
            }
        }
   
        //Deploy to Kong
        stage('Deploy to Kong') {
            steps {
                sh 'deck sync -s new-kong3.yaml --kong-addr https://34.125.74.21:8444 --tls-skip-verify'
            }
        }
   }
   post {
        always {
           deleteDir()
       }
    }
}
