name: Demo to Delpoy OAS to Kong # Specify the name of the deployment

on:
  push:
    branches:
      - main  # Trigger the deployment when pushing to the main branch
#mjj
jobs:
  OAS_To_KONG:
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job

    steps:
    - name: Checkout Code  # Checkout the code from the repository
      uses: actions/checkout@v2

    - name: Install Insomnia CLI  # Install Insomnia CLI for linting and generating Kong configuration
      run: |
        wget https://github.com/Kong/insomnia/releases/download/lib%403.12.0/inso-linux-3.12.0.tar.xz
        tar -xf inso-linux-3.12.0.tar.xz

    - name: Lint OpenAPI Spec  # Lint the OpenAPI spec using Insomnia CLI
      run: ./inso lint spec pipe1.yml
    - name: Generate kong.yaml  # Generate Kong configuration in declarative format
      run: ./inso generate config pipe1.yml --type declarative -o kong.yaml
    - name: open kong.yaml  # Display the contents of the generated Kong configuration
      run: cat /home/runner/work/ApiActionDemo/ApiActionDemo/kong.yaml
    - name: install deck CLI  # Install deck CLI for syncing Kong configuration
      run: |
        curl -sL https://github.com/kong/deck/releases/download/v1.17.2/deck_1.17.2_linux_amd64.tar.gz -o deck.tar.gz
        tar -xf deck.tar.gz -C /tmp 
        sudo cp /tmp/deck /usr/local/bin/

    - name: check  # Validate the Kong configuration using deck CLI
      run: deck validate -s /home/runner/work/ApiActionDemo/ApiActionDemo/kong.yaml

    - name: Convert kong declarative  # Convert the Kong configuration to version 3.x using deck CLI
      run: |
          deck convert --from kong-gateway-2.x --to kong-gateway-3.x --input-file kong.yaml --output-file new-kong.yaml

    - name: Deploy to Kong  # Sync the Kong configuration to Kong API Gateway
      run: deck sync -s new-kong.yaml --kong-addr http://34.125.240.32:8001 --tls-skip-verify
  publish-customer-api-to-portal:  # Publish the API to the dev portal
    name: Publish OAS to dev portal
  
    
